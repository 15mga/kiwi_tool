// 自定义option

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.1
// source: kiwi.proto

package kiwi_tool

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EOrigin int32

const (
	EOrigin_Pkt     EOrigin = 0
	EOrigin_Head    EOrigin = 1
	EOrigin_Service EOrigin = 2
)

// Enum value maps for EOrigin.
var (
	EOrigin_name = map[int32]string{
		0: "Pkt",
		1: "Head",
		2: "Service",
	}
	EOrigin_value = map[string]int32{
		"Pkt":     0,
		"Head":    1,
		"Service": 2,
	}
)

func (x EOrigin) Enum() *EOrigin {
	p := new(EOrigin)
	*p = x
	return p
}

func (x EOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_kiwi_proto_enumTypes[0].Descriptor()
}

func (EOrigin) Type() protoreflect.EnumType {
	return &file_kiwi_proto_enumTypes[0]
}

func (x EOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EOrigin.Descriptor instead.
func (EOrigin) EnumDescriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{0}
}

type EWorker int32

const (
	EWorker_Go     EWorker = 0
	EWorker_Active EWorker = 1 //需要key
	EWorker_Share  EWorker = 2 //需要key
	EWorker_Global EWorker = 3
	EWorker_Self   EWorker = 4
)

// Enum value maps for EWorker.
var (
	EWorker_name = map[int32]string{
		0: "Go",
		1: "Active",
		2: "Share",
		3: "Global",
		4: "Self",
	}
	EWorker_value = map[string]int32{
		"Go":     0,
		"Active": 1,
		"Share":  2,
		"Global": 3,
		"Self":   4,
	}
)

func (x EWorker) Enum() *EWorker {
	p := new(EWorker)
	*p = x
	return p
}

func (x EWorker) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWorker) Descriptor() protoreflect.EnumDescriptor {
	return file_kiwi_proto_enumTypes[1].Descriptor()
}

func (EWorker) Type() protoreflect.EnumType {
	return &file_kiwi_proto_enumTypes[1]
}

func (x EWorker) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EWorker.Descriptor instead.
func (EWorker) EnumDescriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{1}
}

type EIdx int32

const (
	EIdx_Asc        EIdx = 0
	EIdx_Desc       EIdx = 1
	EIdx_TwoDSphere EIdx = 2
	EIdx_Text       EIdx = 3
)

// Enum value maps for EIdx.
var (
	EIdx_name = map[int32]string{
		0: "Asc",
		1: "Desc",
		2: "TwoDSphere",
		3: "Text",
	}
	EIdx_value = map[string]int32{
		"Asc":        0,
		"Desc":       1,
		"TwoDSphere": 2,
		"Text":       3,
	}
)

func (x EIdx) Enum() *EIdx {
	p := new(EIdx)
	*p = x
	return p
}

func (x EIdx) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EIdx) Descriptor() protoreflect.EnumDescriptor {
	return file_kiwi_proto_enumTypes[2].Descriptor()
}

func (EIdx) Type() protoreflect.EnumType {
	return &file_kiwi_proto_enumTypes[2]
}

func (x EIdx) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EIdx.Descriptor instead.
func (EIdx) EnumDescriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{2}
}

type Ntc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Svc   string     `protobuf:"bytes,1,opt,name=svc,proto3" json:"svc,omitempty"`
	Items []*NtcItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Ntc) Reset() {
	*x = Ntc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ntc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ntc) ProtoMessage() {}

func (x *Ntc) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ntc.ProtoReflect.Descriptor instead.
func (*Ntc) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{0}
}

func (x *Ntc) GetSvc() string {
	if x != nil {
		return x.Svc
	}
	return ""
}

func (x *Ntc) GetItems() []*NtcItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NtcItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Mode   EWorker `protobuf:"varint,2,opt,name=mode,proto3,enum=kiwi.EWorker" json:"mode,omitempty"`
	Origin EOrigin `protobuf:"varint,3,opt,name=origin,proto3,enum=kiwi.EOrigin" json:"origin,omitempty"`
	Key    string  `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *NtcItem) Reset() {
	*x = NtcItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NtcItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtcItem) ProtoMessage() {}

func (x *NtcItem) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtcItem.ProtoReflect.Descriptor instead.
func (*NtcItem) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{1}
}

func (x *NtcItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NtcItem) GetMode() EWorker {
	if x != nil {
		return x.Mode
	}
	return EWorker_Go
}

func (x *NtcItem) GetOrigin() EOrigin {
	if x != nil {
		return x.Origin
	}
	return EOrigin_Pkt
}

func (x *NtcItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Svc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    //服务id
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //服务名
	Worker       *Worker  `protobuf:"bytes,3,opt,name=worker,proto3" json:"worker,omitempty"`             //worker使用方式
	Ntc          []*Ntc   `protobuf:"bytes,4,rep,name=ntc,proto3" json:"ntc,omitempty"`                   //监听的通知
	Fail         []*Fail  `protobuf:"bytes,5,rep,name=fail,proto3" json:"fail,omitempty"`                 //错误码
	Common       []string `protobuf:"bytes,6,rep,name=common,proto3" json:"common,omitempty"`             //通用服务
	Dependencies []string `protobuf:"bytes,7,rep,name=dependencies,proto3" json:"dependencies,omitempty"` //依赖服务
}

func (x *Svc) Reset() {
	*x = Svc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Svc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Svc) ProtoMessage() {}

func (x *Svc) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Svc.ProtoReflect.Descriptor instead.
func (*Svc) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{2}
}

func (x *Svc) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Svc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Svc) GetWorker() *Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

func (x *Svc) GetNtc() []*Ntc {
	if x != nil {
		return x.Ntc
	}
	return nil
}

func (x *Svc) GetFail() []*Fail {
	if x != nil {
		return x.Fail
	}
	return nil
}

func (x *Svc) GetCommon() []string {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *Svc) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type Worker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   EWorker `protobuf:"varint,1,opt,name=mode,proto3,enum=kiwi.EWorker" json:"mode,omitempty"`
	Origin EOrigin `protobuf:"varint,2,opt,name=origin,proto3,enum=kiwi.EOrigin" json:"origin,omitempty"`
	Key    string  `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Worker) Reset() {
	*x = Worker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{3}
}

func (x *Worker) GetMode() EWorker {
	if x != nil {
		return x.Mode
	}
	return EWorker_Go
}

func (x *Worker) GetOrigin() EOrigin {
	if x != nil {
		return x.Origin
	}
	return EOrigin_Pkt
}

func (x *Worker) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Fail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Fail) Reset() {
	*x = Fail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fail) ProtoMessage() {}

func (x *Fail) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fail.ProtoReflect.Descriptor instead.
func (*Fail) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{4}
}

func (x *Fail) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Fail) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Fail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IdxField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type EIdx   `protobuf:"varint,2,opt,name=type,proto3,enum=kiwi.EIdx" json:"type,omitempty"` //索引类型
}

func (x *IdxField) Reset() {
	*x = IdxField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdxField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdxField) ProtoMessage() {}

func (x *IdxField) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdxField.ProtoReflect.Descriptor instead.
func (*IdxField) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{5}
}

func (x *IdxField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdxField) GetType() EIdx {
	if x != nil {
		return x.Type
	}
	return EIdx_Asc
}

type Idx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*IdxField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Unique bool        `protobuf:"varint,2,opt,name=unique,proto3" json:"unique,omitempty"` //唯一索引
	Name   string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`      //索引名
	Ttl    int64       `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`       //用于在一定时间后或在特定的时刻自动从集合中删除文档
	Sparse bool        `protobuf:"varint,5,opt,name=sparse,proto3" json:"sparse,omitempty"` //稀疏索引仅包含具有索引字段的文档条目，即使索引字段包含空值也是如此。索引会跳过任何缺少索引字段的文档
}

func (x *Idx) Reset() {
	*x = Idx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiwi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Idx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Idx) ProtoMessage() {}

func (x *Idx) ProtoReflect() protoreflect.Message {
	mi := &file_kiwi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Idx.ProtoReflect.Descriptor instead.
func (*Idx) Descriptor() ([]byte, []int) {
	return file_kiwi_proto_rawDescGZIP(), []int{6}
}

func (x *Idx) GetFields() []*IdxField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Idx) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Idx) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Idx) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Idx) GetSparse() bool {
	if x != nil {
		return x.Sparse
	}
	return false
}

var file_kiwi_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*Svc)(nil),
		Field:         151001,
		Name:          "kiwi.svc",
		Tag:           "bytes,151001,opt,name=svc",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         151100,
		Name:          "kiwi.method",
		Tag:           "varint,151100,opt,name=method",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         151101,
		Name:          "kiwi.role",
		Tag:           "bytes,151101,rep,name=role",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         151102,
		Name:          "kiwi.schema",
		Tag:           "varint,151102,opt,name=schema",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*Idx)(nil),
		Field:         151103,
		Name:          "kiwi.idx",
		Tag:           "bytes,151103,rep,name=idx",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Worker)(nil),
		Field:         151104,
		Name:          "kiwi.worker",
		Tag:           "bytes,151104,opt,name=worker",
		Filename:      "kiwi.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         151200,
		Name:          "kiwi.cache",
		Tag:           "varint,151200,opt,name=cache",
		Filename:      "kiwi.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional kiwi.Svc svc = 151001;
	E_Svc = &file_kiwi_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional int32 method = 151100;
	E_Method = &file_kiwi_proto_extTypes[1]
	// repeated string role = 151101;
	E_Role = &file_kiwi_proto_extTypes[2]
	// optional bool schema = 151102;
	E_Schema = &file_kiwi_proto_extTypes[3]
	// repeated kiwi.Idx idx = 151103;
	E_Idx = &file_kiwi_proto_extTypes[4]
	// optional kiwi.Worker worker = 151104;
	E_Worker = &file_kiwi_proto_extTypes[5]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool cache = 151200;
	E_Cache = &file_kiwi_proto_extTypes[6]
)

var File_kiwi_proto protoreflect.FileDescriptor

var file_kiwi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6b, 0x69,
	0x77, 0x69, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x03, 0x4e, 0x74, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x76, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x76, 0x63, 0x12, 0x23, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b,
	0x69, 0x77, 0x69, 0x2e, 0x4e, 0x74, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x79, 0x0a, 0x07, 0x4e, 0x74, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x45, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x45, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xc8, 0x01,
	0x0a, 0x03, 0x53, 0x76, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x69, 0x77, 0x69,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x03, 0x6e, 0x74, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b,
	0x69, 0x77, 0x69, 0x2e, 0x4e, 0x74, 0x63, 0x52, 0x03, 0x6e, 0x74, 0x63, 0x12, 0x1e, 0x0a, 0x04,
	0x66, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6b, 0x69, 0x77,
	0x69, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x45, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x45, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3e,
	0x0a, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3e,
	0x0a, 0x08, 0x49, 0x64, 0x78, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x6b,
	0x69, 0x77, 0x69, 0x2e, 0x45, 0x49, 0x64, 0x78, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x03, 0x49, 0x64, 0x78, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x49, 0x64,
	0x78, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x2a, 0x29, 0x0a, 0x07, 0x45, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x6b, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x02, 0x2a,
	0x3e, 0x0a, 0x07, 0x45, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x6f,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x66, 0x10, 0x04, 0x2a,
	0x33, 0x0a, 0x04, 0x45, 0x49, 0x64, 0x78, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x73, 0x63, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x77,
	0x6f, 0x44, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x10, 0x03, 0x3a, 0x3b, 0x0a, 0x03, 0x73, 0x76, 0x63, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd9, 0x9b, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x53, 0x76, 0x63, 0x52, 0x03, 0x73, 0x76,
	0x63, 0x3a, 0x39, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbc, 0x9c, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x35, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0x9c, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x3a, 0x39, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbe,
	0x9c, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x3a, 0x3e,
	0x0a, 0x03, 0x69, 0x64, 0x78, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbf, 0x9c, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x49, 0x64, 0x78, 0x52, 0x03, 0x69, 0x64, 0x78, 0x3a, 0x47,
	0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc0, 0x9c, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x69, 0x77, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x3a, 0x35, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xa0, 0x9d, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x42, 0x1c,
	0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x35, 0x6d,
	0x67, 0x61, 0x2f, 0x6b, 0x69, 0x77, 0x69, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kiwi_proto_rawDescOnce sync.Once
	file_kiwi_proto_rawDescData = file_kiwi_proto_rawDesc
)

func file_kiwi_proto_rawDescGZIP() []byte {
	file_kiwi_proto_rawDescOnce.Do(func() {
		file_kiwi_proto_rawDescData = protoimpl.X.CompressGZIP(file_kiwi_proto_rawDescData)
	})
	return file_kiwi_proto_rawDescData
}

var file_kiwi_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kiwi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kiwi_proto_goTypes = []interface{}{
	(EOrigin)(0),                        // 0: kiwi.EOrigin
	(EWorker)(0),                        // 1: kiwi.EWorker
	(EIdx)(0),                           // 2: kiwi.EIdx
	(*Ntc)(nil),                         // 3: kiwi.Ntc
	(*NtcItem)(nil),                     // 4: kiwi.NtcItem
	(*Svc)(nil),                         // 5: kiwi.Svc
	(*Worker)(nil),                      // 6: kiwi.Worker
	(*Fail)(nil),                        // 7: kiwi.Fail
	(*IdxField)(nil),                    // 8: kiwi.IdxField
	(*Idx)(nil),                         // 9: kiwi.Idx
	(*descriptorpb.FileOptions)(nil),    // 10: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 11: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 12: google.protobuf.FieldOptions
}
var file_kiwi_proto_depIdxs = []int32{
	4,  // 0: kiwi.Ntc.items:type_name -> kiwi.NtcItem
	1,  // 1: kiwi.NtcItem.mode:type_name -> kiwi.EWorker
	0,  // 2: kiwi.NtcItem.origin:type_name -> kiwi.EOrigin
	6,  // 3: kiwi.Svc.worker:type_name -> kiwi.Worker
	3,  // 4: kiwi.Svc.ntc:type_name -> kiwi.Ntc
	7,  // 5: kiwi.Svc.fail:type_name -> kiwi.Fail
	1,  // 6: kiwi.Worker.mode:type_name -> kiwi.EWorker
	0,  // 7: kiwi.Worker.origin:type_name -> kiwi.EOrigin
	2,  // 8: kiwi.IdxField.type:type_name -> kiwi.EIdx
	8,  // 9: kiwi.Idx.fields:type_name -> kiwi.IdxField
	10, // 10: kiwi.svc:extendee -> google.protobuf.FileOptions
	11, // 11: kiwi.method:extendee -> google.protobuf.MessageOptions
	11, // 12: kiwi.role:extendee -> google.protobuf.MessageOptions
	11, // 13: kiwi.schema:extendee -> google.protobuf.MessageOptions
	11, // 14: kiwi.idx:extendee -> google.protobuf.MessageOptions
	11, // 15: kiwi.worker:extendee -> google.protobuf.MessageOptions
	12, // 16: kiwi.cache:extendee -> google.protobuf.FieldOptions
	5,  // 17: kiwi.svc:type_name -> kiwi.Svc
	9,  // 18: kiwi.idx:type_name -> kiwi.Idx
	6,  // 19: kiwi.worker:type_name -> kiwi.Worker
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	17, // [17:20] is the sub-list for extension type_name
	10, // [10:17] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_kiwi_proto_init() }
func file_kiwi_proto_init() {
	if File_kiwi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kiwi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ntc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NtcItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Svc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Worker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdxField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiwi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Idx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kiwi_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 7,
			NumServices:   0,
		},
		GoTypes:           file_kiwi_proto_goTypes,
		DependencyIndexes: file_kiwi_proto_depIdxs,
		EnumInfos:         file_kiwi_proto_enumTypes,
		MessageInfos:      file_kiwi_proto_msgTypes,
		ExtensionInfos:    file_kiwi_proto_extTypes,
	}.Build()
	File_kiwi_proto = out.File
	file_kiwi_proto_rawDesc = nil
	file_kiwi_proto_goTypes = nil
	file_kiwi_proto_depIdxs = nil
}
